@{
    ViewBag.Title = "Index";
}



<ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#version1" aria-controls="version1" role="tab" data-toggle="tab">Version 1</a></li>
    <li role="presentation"><a href="#version2" aria-controls="version2" role="tab" data-toggle="tab" class="active">Version 2</a></li>

</ul>
<div class="tab-content">
    <div role="tabpanel" class="tab-pane fade in " id="version1">


        <div class="container-fluid" id="calculatorDiv">
            <h1 style="color: #0000cd">Calculator </h1>
            <p> Enter the numbers to calculate with : </p>
            <div class="row">
                <div class="col-xs-2">
                    <b> Number 1 :</b>
                    <input type="number" class="form-control" data-bind="numericValue:number1" size="3" width="3" min="0" max="9"/>
                    <b> Number 2 :</b>
                    <input type="number" class="form-control" data-bind="numericValue:number2" size="3" width="3" min="0" max="9" />
                </div>
            </div>
            <div class="row">
                <p>
                    <div class="col-xs-4">
                        <button type="button" data-bind="click:addClick" class="btn-lg"> + </button>
                        <button type="button" data-bind="click:subtractClick" class="btn-lg"> - </button>
                    </div>
                </p>
            </div>
            <div class="row">
                <p>
                    <div class="col-xs-4">
                        <span><button type="button" data-bind="click:multiplyClick" class="btn-lg"> x </button></span>
                        <span><button type="button" data-bind="click:devideClick" class="btn-lg"> ÷ </button></span>
                    </div>
                </p>
            </div>
            <div class="row">
                <p>
                    <div class="well well-sm">
                        <span style="font-size: medium" class="col-xs-2">  <b>Answer :</b></span>
                        <span data-bind="text:answerMessage"></span>
                    </div>
                </p>
            </div>
        </div>
    </div>

    <div role="tabpanel" class="tab-pane fade in active" id="version2">
        <div class="container-fluid" id="calculatorDivtwo">  
            <h1 style="color: #b22222"> Calculator 2.0 </h1>
            <div id="calulator">
                <div class="numbers" >                 
                        <div class="row">
                            <h3>
                                <p>
                                    <div class="col-sm-1">
                                        <input type="button" value="C" data-bind="click:clear">
                                    </div>

                                    <div class="col-sm-11">
                                        <span class="label label-default" data-bind="text:currentValue"></span>
                                        <span class="label label-default" data-bind="text:currentOperator"></span>
                                        <span class="label label-default" data-bind="text:nextValue"></span>
                                    </div>
                                </p>
                            </h3>
                        </div>                  
                </div>
                    </div>
                    <div class="row">
                        <p>
                        <div class="col-md-4">
                            <span><button type="button" class="btn-lg" data-bind="click: function(data, event) { numberClick(7) }">7</button></span>
                            <span><button type="button" class="btn-lg" data-bind="click:function(data, event) { numberClick(8) }">8</button></span>
                            <span><button type="button" class="btn-lg" data-bind="click:function(data, event) { numberClick(9) }">9</button></span>
                            <span><button type="button" class="btn-lg" data-bind="click: function(data, event) { operatorClick('+') }">+</button></span>
                        </div>
                            </p>
                    </div>
                    <div class="row">
                        <p>
                        <div class="col-md-4">
                            <span> <button type="button" class="btn-lg" data-bind="click: function(data, event) { numberClick(6) }">6</button></span>
                            <span> <button type="button" class="btn-lg" data-bind="click: function(data, event) { numberClick(5) }">5</button></span>
                            <span> <button type="button" class="btn-lg" data-bind="click: function(data, event) { numberClick(4) }">4</button></span>
                            <span> <button type="button" class="btn-lg" data-bind="click: function(data, event) { operatorClick('-') }"> - </button></span>
                        </div>
                            </p>
                    </div>
                    <div class="row">
                        <p>
                        <div class="col-md-4">
                            <span> <button type="button" class="btn-lg" data-bind="click: function(data, event) { numberClick(3) }">3</button></span>
                            <span> <button type="button" class="btn-lg" data-bind="click: function(data, event) { numberClick(2) }">2</button></span>
                            <span> <button type="button" class="btn-lg" data-bind="click: function(data, event) { numberClick(1) }">1</button></span>
                            <span> <button type="button" class="btn-lg" data-bind="click:function(data, event) { operatorClick('x') }">x</button></span>
                        </div>
                        </p>
                    </div>
                    <div class="row">
                        <p>
                        <div class="col-md-4">
                            <span> <button type="button" class="btn-lg" data-bind="click: function(data, event) { numberClick(0) }">0</button></span>
                            <span> <button type="button" class="btn-lg" data-bind="click : function(data,event) { numberClick('.')}">.</button></span>
                            <span> <button type="button" class="btn-lg" data-bind="click: calculate">=</button></span>
                            <span> <button type="button" class="btn-lg" data-bind="click:function(data, event) { operatorClick('/') }">÷</button></span>

                        </div>
                            </p>
                    </div>
            </div>
            </div>
        </div>
    


<script>
    var calculatorViewmodel = function() {
        var self = this;
        self.number1 = ko.observable(0);
        self.number2 = ko.observable(0);
        self.answer = ko.observable(0);
        self.answer.subscribe(function(newValue) {
            self.answerMessage(newValue);
        });
        self.answerMessage = ko.observable("..click on expression button to show answer...");
        self.addClick = function() {
            self.answer(self.number1() + self.number2());
        }
        self.subtractClick = function() {
            self.answer(self.number1() - self.number2());
        }
        self.multiplyClick = function() {
            self.answer(self.number1() * self.number2());
        }
        self.devideClick = function() {
            self.answer(self.number1() / self.number2());
        }
    }


    ko.applyBindings(new calculatorViewmodel(), document.getElementById("calculatorDiv"));


</script>
<script>
    var calculatorViewinhtml = function () {
        var self = this;

        self.currentValue = ko.observable("0");
        self.currentOperator = ko.observable("");
        self.nextValue = ko.observable("");
        self.valueToUpdate = ko.observable();
        self.currentValue.subscribe(function (newValue) {
            self.currentValue(newValue);
        });

        self.clear = function () {
            self.currentValue("0");
            self.nextValue("");
            self.currentOperator("");
        }

        self.numberClick = function (number) {
            self.valueToUpdate = self.currentOperator() == "" ? self.currentValue : self.nextValue;

            if (self.valueToUpdate() === "0") {
                self.valueToUpdate(number + "");
            } else {
                self.valueToUpdate(self.valueToUpdate() + number);
            }
        }

        self.operatorClick = function (operator) {
            self.currentOperator(operator);
        }

        self.calculate = function () {
            var value1 = parseFloat(self.currentValue());
            var value2 = parseFloat(self.nextValue());
            switch (self.currentOperator()) {
                case "+":
                    self.currentValue(value1 + value2);
                    break;
                case "-":
                    self.currentValue(value1 - value2);
                    break;
                case "x":
                    self.currentValue(value1 * value2);
                    break;
                case "÷":
                    self.currentValue(value1 / value2);
                    break;
            }
            self.nextValue("");
            self.currentOperator("");
        }

    }

    var calculatorViewModel = new calculatorViewinhtml();
    ko.applyBindings(calculatorViewModel, document.getElementById("calculatorDivtwo"));
</script>